name: Build

permissions:
  contents: write
  packages: write

on:
  push:
    branches: [main]
    paths-ignore:
      - "**.md"
      - "**.spec.js"
      - "**.idea"
      - ".vscode"
      - ".dockerignore"
      - "Dockerfile"
      - ".gitignore"
      - ".github/**"
      - "!.github/workflows/build.yml"

jobs:
  bump-version:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Configure Git
        run: |
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'

      - name: Bump Version
        run: |
          npm version patch -m "Bump version to %s [skip ci]"
          git push
          git push --tags

      - name: Output Version
        id: version
        run: echo "version=$(node -p "require('./package.json').version")" >> $GITHUB_OUTPUT

      - name: Create Release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          gh release create "v${{ steps.version.outputs.version }}" \
            --title "Release v${{ steps.version.outputs.version }}" \
            --notes "Release v${{ steps.version.outputs.version }}" \
            --draft
 
    outputs:
      version: ${{ steps.version.outputs.version }}

  build:
    needs: bump-version
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [
            macos-latest, 
            # ubuntu-latest, 
            # windows-latest
        ]

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          ref: v${{ needs.bump-version.outputs.version }}

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Install Dependencies
        run: npm install

      # Build builtins
      - name: Install Builtins Dependencies
        run: cd commands/@modal-commander/builtins && npm install

      - name: Build Native Builtins
        run: cd commands/@modal-commander/builtins && npm run build:native

      - name: Build Builtins
        run: cd commands/@modal-commander/builtins && npm run build

      - name: Build Release Files
        run: npm run build
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: release_on_${{ matrix.os }}
          path: |
            ${{ runner.os == 'Windows' && 'release/${{ needs.bump-version.outputs.version }}/*.{exe,msi}' || '' }}
            ${{ runner.os == 'macOS' && 'release/${{ needs.bump-version.outputs.version }}/*.dmg' || '' }}
            ${{ runner.os == 'Linux' && 'release/${{ needs.bump-version.outputs.version }}/*.{AppImage,snap}' || '' }}
          retention-days: 5

      - name: Upload to Release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        shell: bash
        run: |
          if [ "$RUNNER_OS" == "Windows" ]; then
            for file in ./release/${{ needs.bump-version.outputs.version }}/*.{exe,msi}; do
              if [ -f "$file" ]; then
                gh release upload "v${{ needs.bump-version.outputs.version }}" "$file" --clobber
              fi
            done
          elif [ "$RUNNER_OS" == "macOS" ]; then
            for file in ./release/${{ needs.bump-version.outputs.version }}/*.dmg; do
              if [ -f "$file" ]; then
                gh release upload "v${{ needs.bump-version.outputs.version }}" "$file" --clobber
              fi
            done
          else
            for file in ./release/${{ needs.bump-version.outputs.version }}/*.{AppImage,snap}; do
              if [ -f "$file" ]; then
                gh release upload "v${{ needs.bump-version.outputs.version }}" "$file" --clobber
              fi
            done
          fi

      - name: Publish Release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          gh release edit "v${{ needs.bump-version.outputs.version }}" --draft=false